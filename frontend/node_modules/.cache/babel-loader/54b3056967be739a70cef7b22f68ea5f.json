{"ast":null,"code":"var _jsxFileName = \"/home/daksh/Projects/Trivia_Game/frontend/src/components/Game.js\";\nimport React, { useState, useEffect, Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      correctAnswers: 0,\n      questionIndex: 0,\n      question: this.props.questions[this.state.questionIndex],\n      isEndScreen: false,\n      len: this.props.questions.length,\n      time: {},\n      seconds: 5\n    };\n    this.timer = 0;\n\n    this.startTimer = () => {\n      if (this.timer === 0 && this.state.seconds > 0) {\n        this.timer = setInterval(this.countDown, 1000);\n      }\n    };\n\n    this.checkAnswer = (response, answer) => {\n      console.log(response, answer, this.state.len);\n\n      if (response === answer) {\n        setCorrectAnswers(this.state.correctAnswers + 1);\n      }\n\n      var newIndex = this.state.questionIndex + 1;\n      setQuestionIndex(newIndex);\n      setQuestion(this.props.questions[this.state.questionIndex + 1]);\n\n      if (this.state.questionIndex + 1 === this.state.len) {\n        setIsEndScreen(true);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [console.log(timer), isEndScreen ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"You got \", this.state.correctAnswers, \"/\", length, \" correct.\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.props.callBackFunction,\n          children: \"Return to home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 7\n          }, this), question.responses.map(response => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log(question);\n              checkAnswer(response, question.answer, props.questions.length);\n            },\n            children: response\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 43\n          }, this))]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 5\n        }, this), \"Correct Answers: \", this.state.correctAnswers, \"Time: \", timer, \"Fix the timer!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/daksh/Projects/Trivia_Game/frontend/src/components/Game.js"],"names":["React","useState","useEffect","Component","Game","state","correctAnswers","questionIndex","question","props","questions","isEndScreen","len","length","time","seconds","timer","startTimer","setInterval","countDown","checkAnswer","response","answer","console","log","setCorrectAnswers","newIndex","setQuestionIndex","setQuestion","setIsEndScreen","render","callBackFunction","name","responses","map","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Component} from 'react';\n\nclass Game extends Component{\n  state = {correctAnswers: 0, questionIndex: 0, question : this.props.questions[this.state.questionIndex], isEndScreen:false, len: this.props.questions.length, time:{}, seconds:5}\n  timer = 0;\n\n  startTimer = () => {\n    if (this.timer === 0 && this.state.seconds > 0) {\n      this.timer = setInterval(this.countDown, 1000);\n    }\n  }\n      \n  checkAnswer = (response, answer) => {\n    console.log(response, answer, this.state.len)\n    if (response === answer) {              \n      setCorrectAnswers(this.state.correctAnswers + 1);\n    }\n    var newIndex = this.state.questionIndex + 1;\n    setQuestionIndex(newIndex);\n    setQuestion(this.props.questions[this.state.questionIndex+1])\n    \n    if (this.state.questionIndex+1 === this.state.len) {\n      setIsEndScreen(true);\n    }\n  }\n  render() {\n  return (\n  <div>\n    {console.log(timer)}\n    {isEndScreen ? \n    <div>\n      You got {this.state.correctAnswers}/{length} correct.\n      <button onClick={this.props.callBackFunction}>Return to home</button>\n  </div> : \n  <div>\n      <div key={question.id}>\n      <p>{question.name}</p>\n      {question.responses.map(response => <button onClick={() => {console.log(question);checkAnswer(response, question.answer, props.questions.length)}}>{response}</button>)}\n      </div>\n    <br/>\n    Correct Answers: {this.state.correctAnswers}\n    Time: {timer}\n    Fix the timer!\n    </div>}\n  </div>) }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}