{"ast":null,"code":"var _jsxFileName = \"/home/daksh/Projects/Trivia_Game/frontend/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useTimer } from 'react-timer-hook';\nimport { useParams, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game(props) {\n  _s();\n\n  const [questions, setQuestions] = useState([]);\n  const [question, setQuestion] = useState(questions[0]);\n  const {\n    gameLink\n  } = useParams();\n  const requestStr = [\"http://localhost:8000/api/games/\", gameLink].join(\"\");\n  const [length, setLength] = useState(7);\n  const [username, setUsername] = useState(\"\");\n  const [isSendScreen, setIsSendScreen] = useState(false);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [isEndScreen, setIsEndScreen] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const initTime = new Date();\n  const prepTime = Date.parse(initTime);\n  initTime.setSeconds(initTime.getSeconds() + length * 10);\n  const [expiryTimestamp, setExpiryTimestamp] = useState(initTime);\n  const [expiryTime, setExpiryTime] = useState(0);\n\n  function sendAnswer() {\n    const sendDict = {\n      \"_id\": username,\n      \"score\": correctAnswers,\n      \"total\": questions.length\n    };\n    console.log(\"reached\");\n    axios.post(\"http://localhost:8000/api/players/\", sendDict).then(res => {\n      console.log(res.data);\n    });\n  }\n\n  useEffect(() => {\n    if (loading) {\n      axios.get(requestStr, {\n        id: gameLink\n      }).then(response => {\n        if (response.data !== null) {\n          setQuestions(response.data.questions);\n          setQuestion(response.data.questions[0]);\n          setLength(response.data.questions.length);\n          setLoading(false);\n          setExpiryTime(response.data.expiryTime);\n        } else {\n          setLoading(false);\n        }\n      });\n      start();\n    }\n  });\n  useEffect(() => {\n    if (username !== \"\") {\n      sendAnswer();\n    }\n  }, [isEndScreen]);\n  const {\n    seconds,\n    minutes,\n    hours,\n    days,\n    isRunning,\n    start,\n    pause,\n    resume,\n    restart\n  } = useTimer({\n    expiryTimestamp,\n    onExpire: () => console.warn(\"onExpire called\")\n  });\n\n  const checkAnswer = (response, answer) => {\n    console.log(\"checking\");\n    console.log(response, answer, length, questionIndex);\n\n    if (response === answer) {\n      setCorrectAnswers(correctAnswers + 1);\n    }\n\n    var newIndex = questionIndex + 1;\n\n    if (newIndex === length) {\n      setIsSendScreen(true);\n      return;\n    }\n\n    setQuestionIndex(newIndex);\n    setQuestion(questions[questionIndex + 1]);\n  };\n\n  if (minutes === 0 && seconds === 0 && !isSendScreen) {\n    setIsSendScreen(true);\n  } //<input value={username} onChange={(event) => setUsername(event.target.value)}/><button onClick={() => {setIsSetUp(true)}}>Submit</button>\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.point, !question && !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"No questions \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.callBackFunction,\n          children: \"Return to home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 32\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [isSendScreen ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: username,\n          onChange: event => setUsername(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 28\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setIsEndScreen(true);\n            setIsSendScreen(false);\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 107\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 23\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), isEndScreen ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"You got \", correctAnswers, \"/\", length, \" correct.\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: props.callBackFunction,\n            children: \"Return to home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 18\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: expiryTime < prepTime ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Expired, \", expiryTime, \", \", prepTime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 36\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: question.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 9\n            }, this), question.responses.map(response => /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                checkAnswer(response, question.answer);\n              },\n              children: response\n            }, response, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 45\n            }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 9\n            }, this), \"Correct Answers: \", correctAnswers, minutes.toString().padStart(2, \"0\"), \":\", seconds.toString().padStart(2, \"0\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Game, \"Ys8AlYBf0EZ6h7daw7CMaiQ5Ii4=\", false, function () {\n  return [useParams, useTimer];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/home/daksh/Projects/Trivia_Game/frontend/src/components/Game.js"],"names":["axios","React","useState","useEffect","useTimer","useParams","Link","Game","props","questions","setQuestions","question","setQuestion","gameLink","requestStr","join","length","setLength","username","setUsername","isSendScreen","setIsSendScreen","correctAnswers","setCorrectAnswers","questionIndex","setQuestionIndex","isEndScreen","setIsEndScreen","loading","setLoading","initTime","Date","prepTime","parse","setSeconds","getSeconds","expiryTimestamp","setExpiryTimestamp","expiryTime","setExpiryTime","sendAnswer","sendDict","console","log","post","then","res","data","get","id","response","start","seconds","minutes","hours","days","isRunning","pause","resume","restart","onExpire","warn","checkAnswer","answer","newIndex","point","callBackFunction","event","target","value","name","responses","map","toString","padStart"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, {useState, useEffect} from 'react';\nimport { useTimer } from 'react-timer-hook';\nimport { useParams, Link } from 'react-router-dom'\n\nfunction Game(props) {\n  const [questions, setQuestions] = useState([]);\n  const [question, setQuestion] = useState(questions[0]);\n  const { gameLink } = useParams();\n  const requestStr = [\"http://localhost:8000/api/games/\",gameLink].join(\"\");\n  const [length, setLength] = useState(7);\n  const [username, setUsername] = useState(\"\");\n  const [isSendScreen, setIsSendScreen] = useState(false);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [isEndScreen, setIsEndScreen] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const initTime = new Date();\n  const prepTime = Date.parse(initTime);\n  initTime.setSeconds(initTime.getSeconds() + length*10);\n  const [expiryTimestamp, setExpiryTimestamp] = useState(initTime);\n  const [expiryTime, setExpiryTime] = useState(0);\n\n  \n  function sendAnswer() {\n    const sendDict = {\"_id\": username, \"score\": correctAnswers, \"total\":questions.length}\n    console.log(\"reached\")\n    axios.post(\"http://localhost:8000/api/players/\", sendDict).then(res => {console.log(res.data)});\n  }\n\n  useEffect(() => {\n    if (loading) {\n    axios.get(requestStr, {id:gameLink}).then((response) => {\n\n    if (response.data !== null) {\n    setQuestions(response.data.questions);\n    setQuestion(response.data.questions[0]);\n    setLength(response.data.questions.length);\n    setLoading(false);\n    setExpiryTime(response.data.expiryTime) }\n    else {\n      setLoading(false)\n    }\n    });\n    start();}})\n\n  useEffect(() => {if (username !== \"\") {sendAnswer();}}, [isEndScreen])\n\n\n  const {\n    seconds,\n    minutes,\n    hours,\n    days,\n    isRunning,\n    start,\n    pause,\n    resume,\n    restart\n  } = useTimer({\n    expiryTimestamp,\n    onExpire: () => console.warn(\"onExpire called\")\n  });\n\n  const checkAnswer = (response, answer) => {\n    console.log(\"checking\")\n    console.log(response, answer, length, questionIndex)\n    if (response === answer) {   \n      setCorrectAnswers(correctAnswers+1);          \n    }\n    var newIndex = questionIndex + 1;\n    if (newIndex === length) {\n      setIsSendScreen(true);\n      return\n    }\n    setQuestionIndex(newIndex);\n    setQuestion(questions[questionIndex+1])\n  }\n\n  if (minutes === 0 && seconds === 0 && !isSendScreen) {\n    setIsSendScreen(true);\n  }\n\n  //<input value={username} onChange={(event) => setUsername(event.target.value)}/><button onClick={() => {setIsSetUp(true)}}>Submit</button>\n\n  return (\n  <div>\n    {props.point}\n    {(!question && !loading) ? <div>No questions <Link to=\"/\"><button onClick={props.callBackFunction}>Return to home</button></Link></div> : \n    <div>\n      {isSendScreen ? <div><input value={username} onChange={(event) => setUsername(event.target.value)}/><button onClick={() => {setIsEndScreen(true);setIsSendScreen(false)}}>Submit</button></div>: \n      <div></div>}\n      {isEndScreen ? \n    <div>\n      You got {correctAnswers}/{length} correct.\n      <Link to=\"/\"><button onClick={props.callBackFunction}>Return to home</button></Link>\n  </div> : \n  <div>\n      {loading ? <p>Loading...</p>: <div>\n        {(expiryTime < prepTime) ? <div>Expired, {expiryTime}, {prepTime}</div>: \n        <div>\n        <p>{question.name}</p>\n        {question.responses.map(response => <button key={response} type=\"button\" onClick={() => {checkAnswer(response, question.answer)}}>{response}</button>)}\n        <br/>\n        Correct Answers: {correctAnswers}\n        {(minutes.toString()).padStart(2, \"0\")}:{(seconds.toString()).padStart(2, \"0\")}\n        </div>}\n    </div>}\n      \n    </div>}\n    </div>} \n  </div>) \n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}