{"ast":null,"code":"var _jsxFileName = \"/home/daksh/Projects/Trivia_Game/frontend/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useTimer } from 'react-timer-hook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game(props) {\n  _s();\n\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    axios.get(\"localhost:3000/api/\").then(response => {\n      setQuestions(response.data);\n      setQuestion(response.data[0]);\n    });\n  });\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [question, setQuestion] = useState(props.questions[0]);\n  const [isEndScreen, setIsEndScreen] = useState(false);\n  const [len, setLen] = useState(props.questions.length);\n  const totalTime = props.questions * 10; //props.questions.length;\n\n  const initTime = new Date();\n  initTime.setSeconds(initTime.getSeconds() + totalTime);\n  const [expiryTimestamp, setExpiryTimestamp] = useState(initTime);\n  const {\n    seconds,\n    minutes,\n    hours,\n    days,\n    isRunning,\n    start,\n    pause,\n    resume,\n    restart\n  } = useTimer({\n    expiryTimestamp,\n    onExpire: () => console.warn(\"onExpire called\")\n  });\n\n  const checkAnswer = (response, answer) => {\n    console.log(response, answer, len);\n\n    if (response === answer) {\n      setCorrectAnswers(correctAnswers + 1);\n    }\n\n    var newIndex = questionIndex + 1;\n    setQuestionIndex(newIndex);\n    setQuestion(props.questions[questionIndex + 1]);\n\n    if (questionIndex + 1 === len) {\n      setIsEndScreen(true);\n    }\n  };\n\n  if (minutes === 0 && seconds === 0 && !isEndScreen) {\n    setIsEndScreen(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !props.question ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"No questions \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.callBackFunction,\n        children: \"Return to home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isEndScreen ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"You got \", correctAnswers, \"/\", len, \" correct.\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.callBackFunction,\n          children: \"Return to home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this), question.responses.map(response => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log(question);\n              checkAnswer(response, question.answer, props.questions.length);\n            },\n            children: response\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 43\n          }, this))]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 5\n        }, this), \"Correct Answers: \", correctAnswers, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [minutes.toString().padStart(2, \"0\"), \":\", seconds.toString().padStart(2, \"0\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Game, \"o+muc8YwwVAgmefbDy2AaUM2INk=\", false, function () {\n  return [useTimer];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/home/daksh/Projects/Trivia_Game/frontend/src/components/Game.js"],"names":["axios","React","useState","useEffect","useTimer","Game","props","questions","setQuestions","get","then","response","data","setQuestion","correctAnswers","setCorrectAnswers","questionIndex","setQuestionIndex","question","isEndScreen","setIsEndScreen","len","setLen","length","totalTime","initTime","Date","setSeconds","getSeconds","expiryTimestamp","setExpiryTimestamp","seconds","minutes","hours","days","isRunning","start","pause","resume","restart","onExpire","console","warn","checkAnswer","answer","log","newIndex","callBackFunction","name","responses","map","id","toString","padStart"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, {useState, useEffect} from 'react';\nimport { useTimer } from 'react-timer-hook';\n\nfunction Game(props) {\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    axios.get(\"localhost:3000/api/\").then(response => {setQuestions(response.data);setQuestion(response.data[0])});\n  })\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [question, setQuestion] = useState(props.questions[0]);\n  const [isEndScreen, setIsEndScreen] = useState(false);\n  const [len, setLen] = useState(props.questions.length);\n  const totalTime = props.questions*10//props.questions.length;\n  const initTime = new Date();\n  initTime.setSeconds(initTime.getSeconds() + totalTime);\n  const [expiryTimestamp, setExpiryTimestamp] = useState(initTime);\n\n  const {\n    seconds,\n    minutes,\n    hours,\n    days,\n    isRunning,\n    start,\n    pause,\n    resume,\n    restart\n  } = useTimer({\n    expiryTimestamp,\n    onExpire: () => console.warn(\"onExpire called\")\n  });\n\n  const checkAnswer = (response, answer) => {\n    console.log(response, answer, len)\n    if (response === answer) {   \n      setCorrectAnswers(correctAnswers+1);          \n    }\n    var newIndex = questionIndex + 1;\n    setQuestionIndex(newIndex);\n    setQuestion(props.questions[questionIndex+1])\n\n    \n    if (questionIndex+1 === len) {\n      setIsEndScreen(true)\n    }\n  }\n\n  if (minutes === 0 && seconds === 0 && !isEndScreen) {\n    setIsEndScreen(true);\n  }\n\n  return (\n  <div>\n    {!props.question ? <div>No questions <button onClick={props.callBackFunction}>Return to home</button></div> : \n    <div>\n      {isEndScreen ? \n    <div>\n      You got {correctAnswers}/{len} correct.\n      <button onClick={props.callBackFunction}>Return to home</button>\n  </div> : \n  <div>\n      <div key={question.id}>\n      <p>{question.name}</p>\n      {question.responses.map(response => <button onClick={() => {console.log(question);checkAnswer(response, question.answer, props.questions.length)}}>{response}</button>)}\n      </div>\n    <br/>\n    Correct Answers: {correctAnswers}\n    <div>\n    {(minutes.toString()).padStart(2, \"0\")}:{(seconds.toString()).padStart(2, \"0\")}\n    </div>\n    </div>}\n    </div>} \n  </div>) \n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}