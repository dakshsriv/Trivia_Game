{"ast":null,"code":"var _jsxFileName = \"/home/daksh/Projects/Trivia_Game/frontend/src/components/Game.js\";\nimport React, { Component } from 'react';\nimport { useTimer } from 'react-timer-hook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      correctAnswers: 0,\n      questionIndex: 0,\n      question: this.props.questions[0],\n      isEndScreen: false,\n      len: this.props.questions.length\n    }[(seconds, minutes, hours, days, isRunning, start, pause, resume, restart)] = useTimer({\n      expiryTimestamp,\n      onExpire: () => console.warn(\"onExpire called\")\n    });\n\n    this.checkAnswer = (response, answer) => {\n      console.log(response, answer, this.state.len);\n\n      if (response === answer) {\n        this.setState({\n          correctAnswers: this.state.correctAnswers + 1\n        });\n      }\n\n      var newIndex = this.state.questionIndex + 1;\n      this.setState({\n        questionIndex: newIndex,\n        question: this.props.questions[this.state.questionIndex + 1]\n      });\n\n      if (this.state.questionIndex + 1 === this.state.len) {\n        this.setState({\n          isEndScreen: true\n        });\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [console.log(this.timer), this.state.isEndScreen ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"You got \", this.state.correctAnswers, \"/\", this.state.len, \" correct.\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.props.callBackFunction,\n          children: \"Return to home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.state.question.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 7\n          }, this), this.state.question.responses.map(response => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log(this.state.question);\n              this.checkAnswer(response, this.state.question.answer, this.props.questions.length);\n            },\n            children: response\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 54\n          }, this))]\n        }, this.state.question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 5\n        }, this), \"Correct Answers: \", this.state.correctAnswers, \"Time: \", this.timer, \"Fix the timer!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/daksh/Projects/Trivia_Game/frontend/src/components/Game.js"],"names":["React","Component","useTimer","Game","state","correctAnswers","questionIndex","question","props","questions","isEndScreen","len","length","seconds","minutes","hours","days","isRunning","start","pause","resume","restart","expiryTimestamp","onExpire","console","warn","checkAnswer","response","answer","log","setState","newIndex","render","timer","callBackFunction","name","responses","map","id"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { useTimer } from 'react-timer-hook';\n\nclass Game extends Component{\n  state = {correctAnswers: 0, questionIndex: 0, question : this.props.questions[0], isEndScreen:false, len: this.props.questions.length}\n\n  [\n    seconds,\n    minutes,\n    hours,\n    days,\n    isRunning,\n    start,\n    pause,\n    resume,\n    restart\n  ] = useTimer({\n    expiryTimestamp,\n    onExpire: () => console.warn(\"onExpire called\")\n  });\n\n  checkAnswer = (response, answer) => {\n    console.log(response, answer, this.state.len)\n    if (response === answer) {   \n      this.setState({correctAnswers : this.state.correctAnswers + 1})           \n    }\n    var newIndex = this.state.questionIndex + 1;\n    this.setState({questionIndex: newIndex, question: this.props.questions[this.state.questionIndex+1]})\n    \n    if (this.state.questionIndex+1 === this.state.len) {\n      this.setState({isEndScreen: true})\n    }\n  }\n  \n  render() {\n  return (\n  <div>\n    {console.log(this.timer)}\n    {this.state.isEndScreen ? \n    <div>\n      You got {this.state.correctAnswers}/{this.state.len} correct.\n      <button onClick={this.props.callBackFunction}>Return to home</button>\n  </div> : \n  <div>\n      <div key={this.state.question.id}>\n      <p>{this.state.question.name}</p>\n      {this.state.question.responses.map(response => <button onClick={() => {console.log(this.state.question);this.checkAnswer(response, this.state.question.answer, this.props.questions.length)}}>{response}</button>)}\n      </div>\n    <br/>\n    Correct Answers: {this.state.correctAnswers}\n    Time: {this.timer}\n    Fix the timer!\n    </div>}\n  </div>) }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}