{"ast":null,"code":"var _jsxFileName = \"/home/daksh/Projects/Trivia_Game/frontend/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game(props) {\n  _s();\n\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [question, setQuestion] = useState(props.questions[questionIndex]);\n  const length = useState(props.questions.length); //const [question, setQuestion] = useState(Object.keys(props.questions)[questionIndex]);\n  //const [questionData, setQuestionData] = useState(Object.values(props.questions)[questionIndex]);\n\n  function checkAnswer(response, answer) {\n    console.log(response, answer, length);\n\n    if (response === answer) {\n      setCorrectAnswers(correctAnswers + 1);\n      var newIndex = questionIndex + 1;\n    }\n\n    setQuestionIndex(newIndex);\n    setQuestion(props.questions[questionIndex + 1]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), question.responses.map(response => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          console.log(question);\n          checkAnswer(response, question.answer, props.questions.length);\n        },\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 49\n      }, this))]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), \"Correct Answers: \", correctAnswers]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"wdC3o52sq1jW4/mdgsuyAkiHwT4=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/home/daksh/Projects/Trivia_Game/frontend/src/components/Game.js"],"names":["React","useState","Game","props","correctAnswers","setCorrectAnswers","questionIndex","setQuestionIndex","question","setQuestion","questions","length","checkAnswer","response","answer","console","log","newIndex","name","responses","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAACE,KAAK,CAACO,SAAN,CAAgBJ,aAAhB,CAAD,CAAxC;AACA,QAAMK,MAAM,GAAGV,QAAQ,CAACE,KAAK,CAACO,SAAN,CAAgBC,MAAjB,CAAvB,CAJiB,CAKjB;AACA;;AAEA,WAASC,WAAT,CAAqBC,QAArB,EAA+BC,MAA/B,EAAsC;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsBC,MAAtB,EAA8BH,MAA9B;;AACA,QAAIE,QAAQ,KAAKC,MAAjB,EAAyB;AAAaT,MAAAA,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;AAClC,UAAIa,QAAQ,GAAGX,aAAa,GAAG,CAA/B;AAEH;;AACDC,IAAAA,gBAAgB,CAACU,QAAD,CAAhB;AACAR,IAAAA,WAAW,CAACN,KAAK,CAACO,SAAN,CAAgBJ,aAAa,GAAC,CAA9B,CAAD,CAAX;AACH;;AAED,sBACA;AAAA,4BACI;AAAA,8BACI;AAAA,kBAAIE,QAAQ,CAACU;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKV,QAAQ,CAACW,SAAT,CAAmBC,GAAnB,CAAuBP,QAAQ,iBAAI;AAAQ,QAAA,OAAO,EAAE,MAAM;AAACE,UAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AAAsBI,UAAAA,WAAW,CAACC,QAAD,EAAWL,QAAQ,CAACM,MAApB,EAA4BX,KAAK,CAACO,SAAN,CAAgBC,MAA5C,CAAX;AAA+D,SAA7G;AAAA,kBAAgHE;AAAhH;AAAA;AAAA;AAAA;AAAA,cAAnC,CAFL;AAAA,OAAUL,QAAQ,CAACa,EAAnB;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA;AAAA;AAAA;AAAA,YALJ,uBAMsBjB,cANtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AASH;;GA3BQF,I;;KAAAA,I;AA6BT,eAAeA,IAAf","sourcesContent":["import React, { useState} from 'react';\n\nfunction Game(props) {\n    const [correctAnswers, setCorrectAnswers] = useState(0);\n    const [questionIndex, setQuestionIndex] = useState(0);\n    const [question, setQuestion] = useState(props.questions[questionIndex]);\n    const length = useState(props.questions.length);\n    //const [question, setQuestion] = useState(Object.keys(props.questions)[questionIndex]);\n    //const [questionData, setQuestionData] = useState(Object.values(props.questions)[questionIndex]);\n\n    function checkAnswer(response, answer){\n        console.log(response, answer, length)\n        if (response === answer) {            setCorrectAnswers(correctAnswers + 1);\n            var newIndex = questionIndex + 1;\n            \n        }\n        setQuestionIndex(newIndex);\n        setQuestion(props.questions[questionIndex+1]);\n    }\n\n    return (\n    <div>\n        <div key={question.id}>\n            <p>{question.name}</p>\n            {question.responses.map(response => <button onClick={() => {console.log(question);checkAnswer(response, question.answer, props.questions.length)}}>{response}</button>)}\n            </div>\n        <br/>\n        Correct Answers: {correctAnswers}\n    </div>)\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}