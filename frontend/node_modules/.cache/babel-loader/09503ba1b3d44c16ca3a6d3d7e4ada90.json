{"ast":null,"code":"var _jsxFileName = \"/home/daksh/Projects/Trivia_Game/frontend/src/components/Game.js\";\nimport React, { useState, useEffect, Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      correctAnswers: 0,\n      questionIndex: 0,\n      question: this.props.questions[questionIndex],\n      isEndScreen: false,\n      length: this.props.questions.length,\n      time: {},\n      seconds: 5\n    };\n    this.timer = 0;\n\n    this.startTimer = () => {\n      if (this.timer === 0 && this.state.seconds > 0) {\n        this.timer = setInterval(this.countDown, 1000);\n      }\n    };\n\n    this.checkAnswer = (response, answer) => {\n      console.log(response, answer, length);\n\n      if (response === answer) {\n        setCorrectAnswers(correctAnswers + 1);\n      }\n\n      var newIndex = this.state.questionIndex + 1;\n      setQuestionIndex(newIndex);\n      setQuestion(props.questions[questionIndex + 1]);\n\n      if (questionIndex + 1 === length) {\n        setIsEndScreen(true);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [console.log(timer), isEndScreen ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"You got \", correctAnswers, \"/\", length, \" correct.\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.callBackFunction,\n          children: \"Return to home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 7\n          }, this), question.responses.map(response => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log(question);\n              checkAnswer(response, question.answer, props.questions.length);\n            },\n            children: response\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 43\n          }, this))]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 5\n        }, this), \"Correct Answers: \", correctAnswers, \"Time: \", timer, \"Fix the timer!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/home/daksh/Projects/Trivia_Game/frontend/src/components/Game.js"],"names":["React","useState","useEffect","Component","Game","state","correctAnswers","questionIndex","question","props","questions","isEndScreen","length","time","seconds","timer","startTimer","setInterval","countDown","checkAnswer","response","answer","console","log","setCorrectAnswers","newIndex","setQuestionIndex","setQuestion","setIsEndScreen","render","callBackFunction","name","responses","map","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAqD,OAArD;;;AAEA,MAAMC,IAAN,SAAmBD,SAAnB,CAA4B;AAAA;AAAA;AAAA,SAC1BE,KAD0B,GAClB;AAACC,MAAAA,cAAc,EAAE,CAAjB;AAAoBC,MAAAA,aAAa,EAAE,CAAnC;AAAsCC,MAAAA,QAAQ,EAAG,KAAKC,KAAL,CAAWC,SAAX,CAAqBH,aAArB,CAAjD;AAAsFI,MAAAA,WAAW,EAAC,KAAlG;AAAyGC,MAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC,SAAX,CAAqBE,MAAtI;AAA8IC,MAAAA,IAAI,EAAC,EAAnJ;AAAuJC,MAAAA,OAAO,EAAC;AAA/J,KADkB;AAAA,SAE1BC,KAF0B,GAElB,CAFkB;;AAAA,SAI1BC,UAJ0B,GAIb,MAAM;AACjB,UAAI,KAAKD,KAAL,KAAe,CAAf,IAAoB,KAAKV,KAAL,CAAWS,OAAX,GAAqB,CAA7C,EAAgD;AAC9C,aAAKC,KAAL,GAAaE,WAAW,CAAC,KAAKC,SAAN,EAAiB,IAAjB,CAAxB;AACD;AACF,KARyB;;AAAA,SAU1BC,WAV0B,GAUZ,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAsBC,MAAtB,EAA8BT,MAA9B;;AACA,UAAIQ,QAAQ,KAAKC,MAAjB,EAAyB;AACvBG,QAAAA,iBAAiB,CAAClB,cAAc,GAAG,CAAlB,CAAjB;AACD;;AACD,UAAImB,QAAQ,GAAG,KAAKpB,KAAL,CAAWE,aAAX,GAA2B,CAA1C;AACAmB,MAAAA,gBAAgB,CAACD,QAAD,CAAhB;AACAE,MAAAA,WAAW,CAAClB,KAAK,CAACC,SAAN,CAAgBH,aAAa,GAAC,CAA9B,CAAD,CAAX;;AAEA,UAAIA,aAAa,GAAC,CAAd,KAAoBK,MAAxB,EAAgC;AAC9BgB,QAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,KAtByB;AAAA;;AAuB1BC,EAAAA,MAAM,GAAG;AACT,wBACA;AAAA,iBACGP,OAAO,CAACC,GAAR,CAAYR,KAAZ,CADH,EAEGJ,WAAW,gBACZ;AAAA,+BACWL,cADX,OAC4BM,MAD5B,4BAEE;AAAQ,UAAA,OAAO,EAAEH,KAAK,CAACqB,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADY,gBAKd;AAAA,gCACI;AAAA,kCACA;AAAA,sBAAItB,QAAQ,CAACuB;AAAb;AAAA;AAAA;AAAA;AAAA,kBADA,EAECvB,QAAQ,CAACwB,SAAT,CAAmBC,GAAnB,CAAuBb,QAAQ,iBAAI;AAAQ,YAAA,OAAO,EAAE,MAAM;AAACE,cAAAA,OAAO,CAACC,GAAR,CAAYf,QAAZ;AAAsBW,cAAAA,WAAW,CAACC,QAAD,EAAWZ,QAAQ,CAACa,MAApB,EAA4BZ,KAAK,CAACC,SAAN,CAAgBE,MAA5C,CAAX;AAA+D,aAA7G;AAAA,sBAAgHQ;AAAhH;AAAA;AAAA;AAAA;AAAA,kBAAnC,CAFD;AAAA,WAAUZ,QAAQ,CAAC0B,EAAnB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKE;AAAA;AAAA;AAAA;AAAA,gBALF,uBAMoB5B,cANpB,YAOSS,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA,cAPA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAkBS;;AA1CiB;;AA6C5B,eAAeX,IAAf","sourcesContent":["import React, { useState, useEffect, Component} from 'react';\n\nclass Game extends Component{\n  state = {correctAnswers: 0, questionIndex: 0, question : this.props.questions[questionIndex], isEndScreen:false, length: this.props.questions.length, time:{}, seconds:5}\n  timer = 0;\n\n  startTimer = () => {\n    if (this.timer === 0 && this.state.seconds > 0) {\n      this.timer = setInterval(this.countDown, 1000);\n    }\n  }\n      \n  checkAnswer = (response, answer) => {\n    console.log(response, answer, length)\n    if (response === answer) {              \n      setCorrectAnswers(correctAnswers + 1);\n    }\n    var newIndex = this.state.questionIndex + 1;\n    setQuestionIndex(newIndex);\n    setQuestion(props.questions[questionIndex+1])\n    \n    if (questionIndex+1 === length) {\n      setIsEndScreen(true);\n    }\n  }\n  render() {\n  return (\n  <div>\n    {console.log(timer)}\n    {isEndScreen ? \n    <div>\n      You got {correctAnswers}/{length} correct.\n      <button onClick={props.callBackFunction}>Return to home</button>\n  </div> : \n  <div>\n      <div key={question.id}>\n      <p>{question.name}</p>\n      {question.responses.map(response => <button onClick={() => {console.log(question);checkAnswer(response, question.answer, props.questions.length)}}>{response}</button>)}\n      </div>\n    <br/>\n    Correct Answers: {correctAnswers}\n    Time: {timer}\n    Fix the timer!\n    </div>}\n  </div>) }\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}