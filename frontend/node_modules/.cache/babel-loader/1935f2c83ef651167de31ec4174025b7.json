{"ast":null,"code":"var _jsxFileName = \"/home/daksh/Projects/Trivia_Game/frontend/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game(props) {\n  _s();\n\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [questionIndex, setQuestionIndex] = useState(0);\n\n  const [question, setQuestion] = //const [question, setQuestion] = useState(Object.keys(props.questions)[questionIndex]);\n  //const [questionData, setQuestionData] = useState(Object.values(props.questions)[questionIndex]);\n  function checkAnswer(response, answer, length) {\n    console.log(response, answer, length);\n\n    if (response === answer && correctAnswers < length) {\n      setCorrectAnswers(correctAnswers + 1);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), question.responses.map(response => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => checkAnswer(response, question.answer, props.questions.length),\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 49\n      }, this))]\n    }, question.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), \"Correct Answers: \", correctAnswers]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"XNQZPXTBxKu00Fj2OAZf7YdmcjM=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/home/daksh/Projects/Trivia_Game/frontend/src/components/Game.js"],"names":["React","useState","Game","props","correctAnswers","setCorrectAnswers","questionIndex","setQuestionIndex","question","setQuestion","checkAnswer","response","answer","length","console","log","name","responses","map","questions","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,CAAC,CAAD,CAApD;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,CAAD,CAAlD;;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAEN;AACA;AAEA,WAASC,WAAT,CAAqBC,QAArB,EAA+BC,MAA/B,EAAuCC,MAAvC,EAA8C;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAAsBC,MAAtB,EAA8BC,MAA9B;;AACA,QAAIF,QAAQ,KAAKC,MAAb,IAAuBR,cAAc,GAAGS,MAA5C,EAAoD;AAChDR,MAAAA,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;AACH;AACJ,GAVD;;AAYA,sBACA;AAAA,4BACI;AAAA,8BACI;AAAA,kBAAII,QAAQ,CAACQ;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKR,QAAQ,CAACS,SAAT,CAAmBC,GAAnB,CAAuBP,QAAQ,iBAAI;AAAQ,QAAA,OAAO,EAAE,MAAMD,WAAW,CAACC,QAAD,EAAWH,QAAQ,CAACI,MAApB,EAA4BT,KAAK,CAACgB,SAAN,CAAgBN,MAA5C,CAAlC;AAAA,kBAAwFF;AAAxF;AAAA;AAAA;AAAA;AAAA,cAAnC,CAFL;AAAA,OAAUH,QAAQ,CAACY,EAAnB;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA;AAAA;AAAA;AAAA,YALJ,uBAMsBhB,cANtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AASH;;GAxBQF,I;;KAAAA,I;AA0BT,eAAeA,IAAf","sourcesContent":["import React, { useState} from 'react';\n\nfunction Game(props) {\n    const [correctAnswers, setCorrectAnswers] = useState(0);\n    const [questionIndex, setQuestionIndex] = useState(0);\n    const [question, setQuestion] = \n    \n    //const [question, setQuestion] = useState(Object.keys(props.questions)[questionIndex]);\n    //const [questionData, setQuestionData] = useState(Object.values(props.questions)[questionIndex]);\n\n    function checkAnswer(response, answer, length){\n        console.log(response, answer, length)\n        if (response === answer && correctAnswers < length) {\n            setCorrectAnswers(correctAnswers + 1)\n        }\n    }\n\n    return (\n    <div>\n        <div key={question.id}>\n            <p>{question.name}</p>\n            {question.responses.map(response => <button onClick={() => checkAnswer(response, question.answer, props.questions.length)}>{response}</button>)}\n            </div>\n        <br/>\n        Correct Answers: {correctAnswers}\n    </div>)\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}