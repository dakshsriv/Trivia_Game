{"ast":null,"code":"var _jsxFileName = \"/home/daksh/Projects/Trivia_Game/frontend/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Create from './Create';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst makeId = length => {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return result;\n};\n\nfunction App(props) {\n  _s();\n\n  const [loading, setLoading] = useState(true);\n  const [requested, setRequested] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [isCreate, setIsCreate] = useState(\"\");\n  const [categorySend, setCategorySend] = useState(\"\");\n  const [expireTime, setExpireTime] = useState(\"\");\n  const [expireTimeFin, setExpireTimeFin] = useState(\"\");\n  useEffect(() => {\n    if (!requested) {\n      axios.get(\"http://localhost:8000/api/categories/\").then(response => {\n        console.log(response.data);\n        setCategories(response.data);\n      });\n      setRequested(true);\n      setLoading(false);\n    }\n  }, [requested]);\n\n  function handleChange(event) {\n    setCategorySend(event.target.value);\n  }\n\n  useEffect(() => {\n    const x = new Date(expireTime);\n    const ts = Date.parse(x);\n    console.log(x, ts);\n\n    if (isNaN(ts) === false) {\n      setExpireTimeFin(ts);\n    }\n  }, [expireTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [isCreate ? /*#__PURE__*/_jsxDEV(Create, {\n        categories: categories,\n        callBackFunction: () => setIsCreate(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: event => setIsCreate(true),\n        children: \"Create question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: categorySend,\n        onChange: handleChange,\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 37\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: event => setExpireTime(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const requestStr = [\"http://localhost:8000/api/questions/\", categorySend].join(\"\");\n          axios.get(requestStr, {\n            category: categorySend\n          }).then(res => {\n            const requestParams = {\n              \"id\": makeId(7),\n              \"expiryTime\": expireTimeFin,\n              \"questions\": res.data\n            };\n            console.log(requestParams);\n            axios.post(\"http://localhost:8000/api/games/\", requestParams).then(res => console.log(res.data));\n          } //Finish this\n          );\n        },\n        children: \"Create link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n}\n\n_s(App, \"xQWyPuwOXKTh9W58uBe8LyjZ0YI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/daksh/Projects/Trivia_Game/frontend/src/components/App.js"],"names":["React","useState","useEffect","Create","axios","makeId","length","result","characters","charactersLength","i","charAt","Math","floor","random","App","props","loading","setLoading","requested","setRequested","categories","setCategories","isCreate","setIsCreate","categorySend","setCategorySend","expireTime","setExpireTime","expireTimeFin","setExpireTimeFin","get","then","response","console","log","data","handleChange","event","target","value","x","Date","ts","parse","isNaN","map","category","requestStr","join","res","requestParams","post"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,MAAM,GAAIC,MAAD,IAAY;AACzB,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,UAAU,GAAG,gEAAjB;AACA,MAAIC,gBAAgB,GAAGD,UAAU,CAACF,MAAlC;;AACA,OAAM,IAAII,CAAC,GAAG,CAAd,EAAiBA,CAAC,GAAGJ,MAArB,EAA6BI,CAAC,EAA9B,EAAmC;AACjCH,IAAAA,MAAM,IAAIC,UAAU,CAACG,MAAX,CAAkBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAC3CL,gBADgC,CAAlB,CAAV;AAEF;;AACD,SAAOF,MAAP;AACA,CATD;;AAWA,SAASQ,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACoB,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACwB,YAAD,EAAeC,eAAf,IAAkCzB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC0B,UAAD,EAAaC,aAAb,IAA8B3B,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC4B,aAAD,EAAgBC,gBAAhB,IAAoC7B,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACiB,SAAL,EAAgB;AACdf,MAAAA,KAAK,CAAC2B,GAAN,CAAU,uCAAV,EAAmDC,IAAnD,CAAyDC,QAAD,IAAc;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AAA2Bd,QAAAA,aAAa,CAACW,QAAQ,CAACG,IAAV,CAAb;AAA8B,OAAhI;AACAhB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AAAmBF,MAAAA,UAAU,CAAC,KAAD,CAAV;AAAmB;AAAC,GAHlC,EAGmC,CAACC,SAAD,CAHnC,CAAT;;AAKA,WAASkB,YAAT,CAAsBC,KAAtB,EAA6B;AAACZ,IAAAA,eAAe,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AAAoC;;AAElEtC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuC,CAAC,GAAG,IAAIC,IAAJ,CAASf,UAAT,CAAV;AACA,UAAMgB,EAAE,GAAGD,IAAI,CAACE,KAAL,CAAWH,CAAX,CAAX;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYM,CAAZ,EAAeE,EAAf;;AACA,QAAIE,KAAK,CAACF,EAAD,CAAL,KAAc,KAAlB,EAAyB;AACzBb,MAAAA,gBAAgB,CAACa,EAAD,CAAhB;AAAuB;AACxB,GANQ,EAMN,CAAChB,UAAD,CANM,CAAT;AAQA,sBACA;AAAA,cACGV,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,gBACR;AAAA,iBACIM,QAAD,gBAAa,QAAC,MAAD;AAAQ,QAAA,UAAU,EAAEF,UAApB;AAAgC,QAAA,gBAAgB,EAAE,MAAMG,WAAW,CAAC,KAAD;AAAnE;AAAA;AAAA;AAAA;AAAA,cAAb,gBACC;AAAQ,QAAA,OAAO,EAAGc,KAAD,IAAWd,WAAW,CAAC,IAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGE;AAAQ,QAAA,KAAK,EAAEC,YAAf;AAA6B,QAAA,QAAQ,EAAEY,YAAvC;AAAA,kBACGhB,UAAU,CAACyB,GAAX,CAAeC,QAAQ,iBAAI;AAAuB,UAAA,KAAK,EAAEA,QAA9B;AAAA,oBAAyCA;AAAzC,WAAaA,QAAb;AAAA;AAAA;AAAA;AAAA,gBAA3B;AADH;AAAA;AAAA;AAAA;AAAA,cAHF,eAME;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAGT,KAAD,IAAWV,aAAa,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd;AAArD;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAQ,QAAA,OAAO,EAAE,MAAM;AAAC,gBAAMQ,UAAU,GAAG,CAAC,sCAAD,EAAwCvB,YAAxC,EAAsDwB,IAAtD,CAA2D,EAA3D,CAAnB;AAAkF7C,UAAAA,KAAK,CAAC2B,GAAN,CAAUiB,UAAV,EAAsB;AAACD,YAAAA,QAAQ,EAACtB;AAAV,WAAtB,EAA+CO,IAA/C,CAAqDkB,GAAD,IAAS;AACrK,kBAAMC,aAAa,GAAG;AAAC,oBAAK9C,MAAM,CAAC,CAAD,CAAZ;AAAgB,4BAAawB,aAA7B;AAA2C,2BAAYqB,GAAG,CAACd;AAA3D,aAAtB;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAYgB,aAAZ;AACA/C,YAAAA,KAAK,CAACgD,IAAN,CAAW,kCAAX,EAA+CD,aAA/C,EAA8DnB,IAA9D,CAAmEkB,GAAG,IAAIhB,OAAO,CAACC,GAAR,CAAYe,GAAG,CAACd,IAAhB,CAA1E;AAAkG,WAHM,CAGL;AAHK;AAIxG,SAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADA;AAkBD;;GA1CQrB,G;;KAAAA,G;AA4CT,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect } from 'react';\nimport Create from './Create';\nimport axios from 'axios';\n\nconst makeId = (length) => {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for ( var i = 0; i < length; i++ ) {\n    result += characters.charAt(Math.floor(Math.random() * \ncharactersLength));\n }\n return result;\n}\n\nfunction App(props) {\n  const [loading, setLoading] = useState(true);\n  const [requested, setRequested] = useState(false);\n  const [categories, setCategories] = useState([]);\n  const [isCreate, setIsCreate] = useState(\"\");\n  const [categorySend, setCategorySend] = useState(\"\");\n  const [expireTime, setExpireTime] = useState(\"\");\n  const [expireTimeFin, setExpireTimeFin] = useState(\"\");\n\n  useEffect(() => {\n    if (!requested) {\n      axios.get(\"http://localhost:8000/api/categories/\").then((response) => {console.log(response.data);setCategories(response.data);});\n      setRequested(true);setLoading(false);}},[requested])\n\n  function handleChange(event) {setCategorySend(event.target.value)}\n\n  useEffect(() => {\n    const x = new Date(expireTime);\n    const ts = Date.parse(x);\n    console.log(x, ts);\n    if (isNaN(ts) === false) {\n    setExpireTimeFin(ts); }\n  }, [expireTime])\n\n  return(\n  <div>\n    {loading ? <div>Loading...</div>: \n    <div>\n      {(isCreate) ? <Create categories={categories} callBackFunction={() => setIsCreate(false)}/> : \n        <button onClick={(event) => setIsCreate(true)}>Create question</button>}\n      <select value={categorySend} onChange={handleChange}>\n        {categories.map(category => <option key={category} value={category}>{category}</option>)}\n      </select>\n      <input type=\"text\" onChange={(event) => setExpireTime(event.target.value)}/>\n      <button onClick={() => {const requestStr = [\"http://localhost:8000/api/questions/\",categorySend].join(\"\");axios.get(requestStr, {category:categorySend}).then((res) => {\n        const requestParams = {\"id\":makeId(7),\"expiryTime\":expireTimeFin,\"questions\":res.data};\n        console.log(requestParams);\n        axios.post(\"http://localhost:8000/api/games/\", requestParams).then(res => console.log(res.data));} //Finish this\n      )}}>Create link</button>\n    </div>} \n  </div>);\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}