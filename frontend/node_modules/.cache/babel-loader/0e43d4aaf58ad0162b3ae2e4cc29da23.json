{"ast":null,"code":"var _jsxFileName = \"/home/daksh/Projects/Trivia_Game/frontend/src/index.js\";\nimport { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport Game from \"./components/Game\";\nimport './index.css';\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Renders extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      routesList: [[\"route\", {\n        \"_id\": \"3ec1fada-4f39-4368-bf62-84447bbe1ba3\",\n        \"name\": \"Who is the leader of Russia\",\n        \"answer\": \"Putin\",\n        \"responses\": [\"Poutine\", \"Putin\", \"Trudeau\", \"Yeshmedinov\"],\n        \"category\": \"World\"\n      }]],\n      questions: null,\n      requested: false\n    };\n\n    this.addRoute = (route, category) => {\n      this.setState(previousState => ({\n        routesList: [...previousState.routesList, route]\n      }), console.log(this.state.routesList));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), this.state.routesList.map((path, _) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/${path}`,\n            children: path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)\n        }, path, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(App, {\n            callBackFunction: this.addRoute,\n            questions: this.questions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), this.state.routesList.map(_ref => {\n          let [routePoint, questions] = _ref;\n          return /*#__PURE__*/_jsxDEV(Route, {\n            path: [\"/\", routePoint].join(\"\"),\n            element: /*#__PURE__*/_jsxDEV(Game, {\n              questions: 5\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 24\n            }, this)\n          }, routePoint, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Renders, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 63,\n  columnNumber: 3\n}, this), rootElement);","map":{"version":3,"sources":["/home/daksh/Projects/Trivia_Game/frontend/src/index.js"],"names":["StrictMode","ReactDOM","App","Game","React","Component","axios","BrowserRouter","Routes","Route","Link","Renders","state","routesList","questions","requested","addRoute","route","category","setState","previousState","console","log","render","map","path","_","routePoint","join","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport Game from \"./components/Game\"\nimport './index.css';\nimport React, { Component } from \"react\";\nimport axios from 'axios'\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\n\nclass Renders extends Component {\n  state = { routesList: [[\"route\",{\n    \"_id\": \"3ec1fada-4f39-4368-bf62-84447bbe1ba3\",\n    \"name\": \"Who is the leader of Russia\",\n    \"answer\": \"Putin\",\n    \"responses\": [\n      \"Poutine\",\n      \"Putin\",\n      \"Trudeau\",\n      \"Yeshmedinov\"\n    ],\n    \"category\": \"World\"\n  }]], questions : null, requested: false};\n\n  addRoute = (route, category) => {\n    this.setState(\n      (previousState) => ({\n        routesList: [...previousState.routesList, route]\n      }),\n      console.log(this.state.routesList)\n    );\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          {this.state.routesList.map((path, _) => (\n            <li key={path}>\n              <Link to={`/${path}`}>{path}</Link>\n            </li>\n          ))}\n        </ul>\n        <Routes>\n          <Route path=\"/\" element={<App callBackFunction={this.addRoute} questions={this.questions}/>} />\n          {this.state.routesList.map(([routePoint, questions]) => (\n            <Route\n              key={routePoint}\n              path={[\"/\", routePoint].join(\"\")}\n              element={<Game questions={5} />}\n            />\n          ))}\n        </Routes>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <Renders />\n  </StrictMode>,\n  rootElement\n);\n"]},"metadata":{},"sourceType":"module"}