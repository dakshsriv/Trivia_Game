{"ast":null,"code":"var _jsxFileName = \"/home/daksh/Projects/Trivia_Game/frontend/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game(props) {\n  _s();\n\n  const [correctAnswers, setCorrectAnswers] = useState(0); //const [question, setQuestion] = useState(Object.keys(props.questions)[questionIndex]);\n  //const [questionData, setQuestionData] = useState(Object.values(props.questions)[questionIndex]);\n\n  function checkAnswer(response, answer) {\n    if (response === answer) {\n      setCorrectAnswers(correctAnswers + 1);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.questions.map(question => {\n      function func() {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [question, /*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 17\n          }, this), question.responses.map(response => {\n            /*#__PURE__*/\n            _jsxDEV(\"button\", {\n              onClick: () => checkAnswer(response, question.answser),\n              children: response\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 54\n            }, this);\n          })]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Game, \"Af2zuz+P0n6nNhlY109GT9+CFoo=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/home/daksh/Projects/Trivia_Game/frontend/src/components/Game.js"],"names":["React","useState","Game","props","correctAnswers","setCorrectAnswers","checkAnswer","response","answer","questions","map","question","func","name","responses","answser","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,CAAC,CAAD,CAApD,CADiB,CAEjB;AACA;;AAEA,WAASK,WAAT,CAAqBC,QAArB,EAA+BC,MAA/B,EAAsC;AAClC,QAAID,QAAQ,KAAKC,MAAjB,EAAyB;AACrBH,MAAAA,iBAAiB,CAACD,cAAc,GAAG,CAAlB,CAAjB;AACH;AACJ;;AAED,sBACA;AAAA,cACKD,KAAK,CAACM,SAAN,CAAgBC,GAAhB,CAAqBC,QAAD,IAAc;AAAC,eAASC,IAAT,GAAgB;AAChD,4BACA;AAAA,qBACKD,QADL,eAEI;AAAA,sBAAIA,QAAQ,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGKF,QAAQ,CAACG,SAAT,CAAmBJ,GAAnB,CAAuBH,QAAQ,IAAI;AAAC;AAAA;AAAQ,cAAA,OAAO,EAAE,MAAMD,WAAW,CAACC,QAAD,EAAWI,QAAQ,CAACI,OAApB,CAAlC;AAAA,wBAAiER;AAAjE;AAAA;AAAA;AAAA;AAAA;AAAoF,WAAxH,CAHL;AAAA,WAAUI,QAAQ,CAACK,EAAnB;AAAA;AAAA;AAAA;AAAA,gBADA;AAOH;AAAC,KARD;AADL;AAAA;AAAA;AAAA;AAAA,UADA;AAYH;;GAvBQd,I;;KAAAA,I;AAyBT,eAAeA,IAAf","sourcesContent":["import React, { useState} from 'react';\n\nfunction Game(props) {\n    const [correctAnswers, setCorrectAnswers] = useState(0);\n    //const [question, setQuestion] = useState(Object.keys(props.questions)[questionIndex]);\n    //const [questionData, setQuestionData] = useState(Object.values(props.questions)[questionIndex]);\n\n    function checkAnswer(response, answer){\n        if (response === answer) {\n            setCorrectAnswers(correctAnswers + 1)\n        }\n    }\n\n    return (\n    <div>\n        {props.questions.map((question) => {function func() {\n            return (\n            <div key={question.id}>\n                {question}\n                <p>{question.name}</p>\n                {question.responses.map(response => {<button onClick={() => checkAnswer(response, question.answser)}>{response}</button>})}\n            </div>)\n            \n        }})}\n    </div>)\n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}