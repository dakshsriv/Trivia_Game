{"ast":null,"code":"var _jsxFileName = \"/home/daksh/Projects/Trivia_Game/frontend/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useTimer } from 'react-timer-hook';\nimport { useParams, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game(props) {\n  _s();\n\n  const [questions, setQuestions] = useState([]);\n  const [question, setQuestion] = useState(questions[0]);\n  const {\n    gameLink\n  } = useParams();\n  const requestStr = [\"http://localhost:8000/api/games/\", gameLink].join(\"\");\n  const length = 7;\n  useEffect(() => {\n    if (loading) {\n      axios.get(requestStr, {\n        id: \"xG7xvlI\"\n      }).then(response => {\n        setQuestions(response.data.questions);\n        setQuestion(response.data.questions[0]);\n        setLoading(false);\n      });\n      start();\n    }\n  });\n  useEffect(() => {\n    console.log(question);\n  }, [question]);\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [isEndScreen, setIsEndScreen] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const initTime = new Date();\n  initTime.setSeconds(initTime.getSeconds() + length * 10);\n  const [expiryTimestamp, setExpiryTimestamp] = useState(initTime);\n  const {\n    seconds,\n    minutes,\n    hours,\n    days,\n    isRunning,\n    start,\n    pause,\n    resume,\n    restart\n  } = useTimer({\n    expiryTimestamp,\n    onExpire: () => console.warn(\"onExpire called\")\n  });\n  console.log(expiryTimestamp);\n\n  const checkAnswer = (response, answer) => {\n    console.log(\"checking\");\n    console.log(response, answer, questions.length, questionIndex);\n\n    if (response === answer) {\n      setCorrectAnswers(correctAnswers + 1);\n    }\n\n    var newIndex = questionIndex + 1;\n\n    if (newIndex === questions.length) {\n      setIsEndScreen(true);\n      return;\n    }\n\n    setQuestionIndex(newIndex);\n    setQuestion(questions[questionIndex + 1]);\n  };\n\n  if (minutes === 0 && seconds === 0 && !isEndScreen) {\n    setIsEndScreen(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.point, !question && !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"No questions \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.callBackFunction,\n          children: \"Return to home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 32\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isEndScreen ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"You got \", correctAnswers, \"/\", questions.length, \" correct.\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: props.callBackFunction,\n            children: \"Return to home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 18\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: question.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 7\n            }, this), question.responses.map(response => /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                checkAnswer(response, question.answer);\n              },\n              children: response\n            }, response, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 43\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 5\n          }, this), \"Correct Answers: \", correctAnswers, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [minutes.toString().padStart(2, \"0\"), \":\", seconds.toString().padStart(2, \"0\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Game, \"X3l3MSgfuVls3O1bfKmCuI2zkGI=\", false, function () {\n  return [useParams, useTimer];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/home/daksh/Projects/Trivia_Game/frontend/src/components/Game.js"],"names":["axios","React","useState","useEffect","useTimer","useParams","Link","Game","props","questions","setQuestions","question","setQuestion","gameLink","requestStr","join","length","loading","get","id","then","response","data","setLoading","start","console","log","correctAnswers","setCorrectAnswers","questionIndex","setQuestionIndex","isEndScreen","setIsEndScreen","initTime","Date","setSeconds","getSeconds","expiryTimestamp","setExpiryTimestamp","seconds","minutes","hours","days","isRunning","pause","resume","restart","onExpire","warn","checkAnswer","answer","newIndex","point","callBackFunction","name","responses","map","toString","padStart"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, {useState, useEffect} from 'react';\nimport { useTimer } from 'react-timer-hook';\nimport { useParams, Link } from 'react-router-dom'\n\nfunction Game(props) {\n  const [questions, setQuestions] = useState([]);\n  const [question, setQuestion] = useState(questions[0]);\n  const { gameLink } = useParams();\n  const requestStr = [\"http://localhost:8000/api/games/\",gameLink].join(\"\");\n  const length = 7;\n\n  useEffect(() => {\n    if (loading) {\n    axios.get(requestStr, {id:\"xG7xvlI\"}).then((response) =>         {\n    setQuestions(response.data.questions);\n    setQuestion(response.data.questions[0]);\n    setLoading(false);\n    });\n    start();}})\n  \n  useEffect(() => {console.log(question)}, [question])\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [isEndScreen, setIsEndScreen] = useState(false);\n  const [loading, setLoading] = useState(true)\n  const initTime = new Date();\n  initTime.setSeconds(initTime.getSeconds() + length*10);\n  const [expiryTimestamp, setExpiryTimestamp] = useState(initTime);\n  \n  const {\n    seconds,\n    minutes,\n    hours,\n    days,\n    isRunning,\n    start,\n    pause,\n    resume,\n    restart\n  } = useTimer({\n    expiryTimestamp,\n    onExpire: () => console.warn(\"onExpire called\")\n  });\n  console.log(expiryTimestamp)\n\n  const checkAnswer = (response, answer) => {\n    console.log(\"checking\")\n    console.log(response, answer, questions.length, questionIndex)\n    if (response === answer) {   \n      setCorrectAnswers(correctAnswers+1);          \n    }\n    var newIndex = questionIndex + 1;\n    if (newIndex === questions.length) {\n      setIsEndScreen(true);\n      return\n    }\n    setQuestionIndex(newIndex);\n    setQuestion(questions[questionIndex+1])\n  }\n\n  if (minutes === 0 && seconds === 0 && !isEndScreen) {\n    setIsEndScreen(true);\n  }\n\n  return (\n  <div>\n    {props.point}\n    {(!question && !loading) ? <div>No questions <Link to=\"/\"><button onClick={props.callBackFunction}>Return to home</button></Link></div> : \n    <div>\n      {isEndScreen ? \n    <div>\n      You got {correctAnswers}/{questions.length} correct.\n      <Link to=\"/\"><button onClick={props.callBackFunction}>Return to home</button></Link>\n  </div> : \n  <div>\n      {loading ? <p>Loading...</p>: <div><div>\n      <p>{question.name}</p>\n      {question.responses.map(response => <button key={response} type=\"button\" onClick={() => {checkAnswer(response, question.answer)}}>{response}</button>)}\n      </div>\n    <br/>\n    Correct Answers: {correctAnswers}\n    <div>\n    {(minutes.toString()).padStart(2, \"0\")}:{(seconds.toString()).padStart(2, \"0\")}\n    </div></div>}\n      \n    </div>}\n    </div>} \n  </div>) \n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}