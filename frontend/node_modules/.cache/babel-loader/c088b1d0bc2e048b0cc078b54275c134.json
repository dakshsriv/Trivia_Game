{"ast":null,"code":"var _jsxFileName = \"/home/daksh/Projects/Trivia_Game/frontend/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Game from './Game';\nimport Create from './Create';\nimport axios from 'axios';\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getQuestions = () => {\n  if (!this.state.requested) {\n    axios({\n      method: 'get',\n      url: 'http://127.0.0.1:8000/api/'\n    }).then(response => {\n      return response.data;\n    });\n  }\n};\n\nclass Renders extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      routesList: [\"testRoute\", \"testRoute2\"]\n    };\n\n    this.addRoute = (route, category) => {\n      this.setState(previousState => ({\n        routesList: [...previousState.routesList, route]\n      }), console.log(this.state.routesList));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), this.state.routesList.map(path => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/${path}`,\n            children: path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, path, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(App, {\n            callBackFunction: this.addRoute\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), this.state.routesList.map(routePoint => /*#__PURE__*/_jsxDEV(Route, {\n          path: [\"/\", routePoint].join(\"\"),\n          element: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"This route is /\", routePoint]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 24\n          }, this)\n        }, routePoint, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst makeid = length => {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return result;\n};\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      questions: {},\n      requested: false,\n      isPlaying: false,\n      isCreate: false\n    };\n  }\n\n  render() {\n    qts = getQuestions();\n    this.setState({\n      questions: getQuestions()\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [this.state.isPlaying && !this.state.isCreate ? /*#__PURE__*/_jsxDEV(Game, {\n        questions: this.state.questions,\n        callBackFunction: () => this.setState({\n          isPlaying: false,\n          requested: false\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.isCreate && !this.state.isPlaying ? /*#__PURE__*/_jsxDEV(Create, {\n          callBackFunction: () => this.setState({\n            isCreate: false\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 62\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => this.setState({\n              isPlaying: true\n            }),\n            children: \"Play game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => this.setState({\n              isCreate: true\n            }),\n            children: \"Create question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 94\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.props.callBackFunction(makeid(7), \"\"),\n        children: \"Create link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/daksh/Projects/Trivia_Game/frontend/src/components/App.js"],"names":["React","Component","Game","Create","axios","BrowserRouter","Routes","Route","Link","getQuestions","state","requested","method","url","then","response","data","Renders","routesList","addRoute","route","category","setState","previousState","console","log","render","map","path","routePoint","join","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","App","questions","isPlaying","isCreate","qts","event","props","callBackFunction"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Game from './Game';\nimport Create from './Create';\nimport axios from 'axios';\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\n\nconst getQuestions = () => {\n  if (!this.state.requested) { \n    axios({\n      method: 'get',\n      url: 'http://127.0.0.1:8000/api/'\n    })\n    .then(response => {\n      return (response.data)\n    }) }};\n\nclass Renders extends Component {\n  state = { routesList: [\"testRoute\", \"testRoute2\"] };\n\n  addRoute = (route, category) => {\n    this.setState(\n      (previousState) => ({\n        routesList: [...previousState.routesList, route]\n      }),\n      console.log(this.state.routesList)\n    );\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          {this.state.routesList.map((path) => (\n            <li key={path}>\n              <Link to={`/${path}`}>{path}</Link>\n            </li>\n          ))}\n        </ul>\n        <Routes>\n          <Route path=\"/\" element={<App callBackFunction={this.addRoute} />} />\n          {this.state.routesList.map((routePoint) => (\n            <Route\n              key={routePoint}\n              path={[\"/\", routePoint].join(\"\")}\n              element={<p>This route is /{routePoint}</p>}\n            />\n          ))}\n        </Routes>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst makeid = (length) => {\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for ( var i = 0; i < length; i++ ) {\n    result += characters.charAt(Math.floor(Math.random() * \ncharactersLength));\n }\n return result;\n}\n\nclass App extends Component {\n  state = {questions: {}, requested: false, isPlaying: false, isCreate: false};\n\n  render() {\n    qts = getQuestions();\n    this.setState({questions: getQuestions()})\n    return(\n    <div>\n      {(this.state.isPlaying && !this.state.isCreate) ? \n      <Game questions={this.state.questions} callBackFunction={() => this.setState({isPlaying: false, requested: false})}/>: \n      <div>{(this.state.isCreate && !this.state.isPlaying) ? <Create callBackFunction={() => this.setState({isCreate: false})}/> : \n        <div><button onClick={(event) => this.setState({isPlaying: true})}>Play game</button><button onClick={(event) => this.setState({isCreate: true})}>Create question</button></div>}</div>}\n      <button onClick={() => this.props.callBackFunction(makeid(7), \"\")}>Create link</button> \n    </div>);\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}