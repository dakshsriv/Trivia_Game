{"ast":null,"code":"var _jsxFileName = \"/home/daksh/Projects/Trivia_Game/frontend/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useTimer } from 'react-timer-hook';\nimport { useParams, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game(props) {\n  _s();\n\n  const [questions, setQuestions] = useState([]);\n  const [question, setQuestion] = useState(questions[0]);\n  const {\n    gameLink\n  } = useParams();\n  const requestStr = [\"http://localhost:8000/api/games/\", gameLink].join(\"\");\n  const [length, setLength] = useState(7);\n  const [username, setUsername] = useState(\"\");\n  const [isSetUp, setIsSetUp] = useState(false);\n  useEffect(() => {\n    if (loading) {\n      axios.get(requestStr, {\n        id: gameLink\n      }).then(response => {\n        if (response.data !== null) {\n          setQuestions(response.data.questions);\n          setQuestion(response.data.questions[0]);\n          setLength(response.data.questions.length);\n          setLoading(false);\n          setExpiryTime(response.data.expiryTime);\n        } else {\n          setLoading(false);\n        }\n      });\n      start();\n    }\n  });\n  useEffect(() => {\n    sendAnswer();\n  }, [isEndScreen]);\n  const {\n    seconds,\n    minutes,\n    hours,\n    days,\n    isRunning,\n    start,\n    pause,\n    resume,\n    restart\n  } = useTimer({\n    expiryTimestamp,\n    onExpire: () => console.warn(\"onExpire called\")\n  });\n\n  const checkAnswer = (response, answer) => {\n    console.log(\"checking\");\n    console.log(response, answer, length, questionIndex);\n\n    if (response === answer) {\n      setCorrectAnswers(correctAnswers + 1);\n    }\n\n    var newIndex = questionIndex + 1;\n\n    if (newIndex === length) {\n      setIsEndScreen(true);\n      return;\n    }\n\n    setQuestionIndex(newIndex);\n    setQuestion(questions[questionIndex + 1]);\n  };\n\n  if (minutes === 0 && seconds === 0 && !isEndScreen) {\n    setIsEndScreen(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.point, !question && !loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"No questions \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.callBackFunction,\n          children: \"Return to home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 32\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isEndScreen ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"You got \", correctAnswers, \"/\", length, \" correct.\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: props.callBackFunction,\n            children: \"Return to home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 18\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: expiryTime < prepTime ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Expired, \", expiryTime, \", \", prepTime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 36\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: !isSetUp ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: username,\n                onChange: event => setUsername(event.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setIsSetUp(true);\n                },\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 112\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: question.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 9\n              }, this), question.responses.map(response => /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => {\n                  checkAnswer(response, question.answer);\n                },\n                children: response\n              }, response, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 45\n              }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 9\n              }, this), \"Correct Answers: \", correctAnswers, minutes.toString().padStart(2, \"0\"), \":\", seconds.toString().padStart(2, \"0\")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 178\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Game, \"uB1yNC3Qq+/FzDkKJCFnCa9eHPQ=\", false, function () {\n  return [useParams, useTimer];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/home/daksh/Projects/Trivia_Game/frontend/src/components/Game.js"],"names":["axios","React","useState","useEffect","useTimer","useParams","Link","Game","props","questions","setQuestions","question","setQuestion","gameLink","requestStr","join","length","setLength","username","setUsername","isSetUp","setIsSetUp","loading","get","id","then","response","data","setLoading","setExpiryTime","expiryTime","start","sendAnswer","isEndScreen","seconds","minutes","hours","days","isRunning","pause","resume","restart","expiryTimestamp","onExpire","console","warn","checkAnswer","answer","log","questionIndex","setCorrectAnswers","correctAnswers","newIndex","setIsEndScreen","setQuestionIndex","point","callBackFunction","prepTime","event","target","value","name","responses","map","toString","padStart"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, {useState, useEffect} from 'react';\nimport { useTimer } from 'react-timer-hook';\nimport { useParams, Link } from 'react-router-dom'\n\nfunction Game(props) {\n  const [questions, setQuestions] = useState([]);\n  const [question, setQuestion] = useState(questions[0]);\n  const { gameLink } = useParams();\n  const requestStr = [\"http://localhost:8000/api/games/\",gameLink].join(\"\");\n  const [length, setLength] = useState(7);\n  const [username, setUsername] = useState(\"\");\n  const [isSetUp, setIsSetUp] = useState(false);\n\n  useEffect(() => {\n    if (loading) {\n    axios.get(requestStr, {id:gameLink}).then((response) => {\n\n    if (response.data !== null) {\n    setQuestions(response.data.questions);\n    setQuestion(response.data.questions[0]);\n    setLength(response.data.questions.length);\n    setLoading(false);\n    setExpiryTime(response.data.expiryTime) }\n    else {\n      setLoading(false)\n    }\n    });\n    start();}})\n\n  useEffect(() => {sendAnswer();}, [isEndScreen])\n\n\n  const {\n    seconds,\n    minutes,\n    hours,\n    days,\n    isRunning,\n    start,\n    pause,\n    resume,\n    restart\n  } = useTimer({\n    expiryTimestamp,\n    onExpire: () => console.warn(\"onExpire called\")\n  });\n\n  const checkAnswer = (response, answer) => {\n    console.log(\"checking\")\n    console.log(response, answer, length, questionIndex)\n    if (response === answer) {   \n      setCorrectAnswers(correctAnswers+1);          \n    }\n    var newIndex = questionIndex + 1;\n    if (newIndex === length) {\n      setIsEndScreen(true);\n      return\n    }\n    setQuestionIndex(newIndex);\n    setQuestion(questions[questionIndex+1])\n  }\n\n  if (minutes === 0 && seconds === 0 && !isEndScreen) {\n    setIsEndScreen(true);\n  }\n\n  return (\n  <div>\n    {props.point}\n    {(!question && !loading) ? <div>No questions <Link to=\"/\"><button onClick={props.callBackFunction}>Return to home</button></Link></div> : \n    <div>\n      {isEndScreen ? \n    <div>\n      You got {correctAnswers}/{length} correct.\n      <Link to=\"/\"><button onClick={props.callBackFunction}>Return to home</button></Link>\n  </div> : \n  <div>\n      {loading ? <p>Loading...</p>: <div>\n        {(expiryTime < prepTime) ? <div>Expired, {expiryTime}, {prepTime}</div>: \n        <div>{(!isSetUp) ? <div><input value={username} onChange={(event) => setUsername(event.target.value)}/><button onClick={() => {setIsSetUp(true)}}>Submit</button></div>: <div>\n        <p>{question.name}</p>\n        {question.responses.map(response => <button key={response} type=\"button\" onClick={() => {checkAnswer(response, question.answer)}}>{response}</button>)}\n        <br/>\n        Correct Answers: {correctAnswers}\n        {(minutes.toString()).padStart(2, \"0\")}:{(seconds.toString()).padStart(2, \"0\")}\n        </div>}\n    </div>}\n    </div>}\n      \n    </div>}\n    </div>} \n  </div>) \n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}