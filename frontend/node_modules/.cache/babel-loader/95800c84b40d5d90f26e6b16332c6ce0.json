{"ast":null,"code":"var _jsxFileName = \"/home/daksh/Projects/Trivia_Game/frontend/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport Test from './components/Test';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Renders = () => {\n  _s();\n\n  state = {\n    routesList: [\"testRoute\", \"testRoute2\"]\n  };\n  const [routesList, setRoutesList] = useState([\"testRoute\", \"testRoute2\"]);\n  return /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), this.state.routesList.map(routePoint => /*#__PURE__*/_jsxDEV(Route, {\n          path: [\"/\", routePoint].join(\"\"),\n          element: /*#__PURE__*/_jsxDEV(Test, {\n            point: routePoint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 104\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 54\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Renders, \"yxogDdePVJwvXfgADIDamFkaMyU=\");\n\n_c = Renders;\nReactDOM.render( /*#__PURE__*/_jsxDEV(Renders, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"Renders\");","map":{"version":3,"sources":["/home/daksh/Projects/Trivia_Game/frontend/src/index.js"],"names":["React","Component","ReactDOM","BrowserRouter","Routes","Route","App","reportWebVitals","Test","useState","Renders","state","routesList","setRoutesList","map","routePoint","join","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,aAAR,EAAuBC,MAAvB,EAA+BC,KAA/B,QAA2C,kBAA3C;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpBC,EAAAA,KAAK,GAAG;AAACC,IAAAA,UAAU,EAAG,CAAC,WAAD,EAAc,YAAd;AAAd,GAAR;AACA,QAAM,CAACA,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,CAAC,WAAD,EAAc,YAAd,CAAD,CAA5C;AACA,sBAAO,QAAC,KAAD,CAAO,UAAP;AAAA,2BACH,QAAC,aAAD;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eAAE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADF,EAEG,KAAKE,KAAL,CAAWC,UAAX,CAAsBE,GAAtB,CAA2BC,UAAD,iBAAgB,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,CAAC,GAAD,EAAMA,UAAN,EAAkBC,IAAlB,CAAuB,EAAvB,CAAb;AAAyC,UAAA,OAAO,eAAE,QAAC,IAAD;AAAM,YAAA,KAAK,EAAED;AAAb;AAAA;AAAA;AAAA;AAAA;AAAlD;AAAA;AAAA;AAAA;AAAA,gBAA1C,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAQD,CAXD;;GAAML,O;;KAAAA,O;AAaNR,QAAQ,CAACe,MAAT,eACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,QADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF,E,CAKA;AACA;AACA;;AACAZ,eAAe","sourcesContent":["import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter, Routes, Route} from 'react-router-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport Test from './components/Test';\nimport {useState} from 'react'\n\nconst Renders = () => {\n  state = {routesList : [\"testRoute\", \"testRoute2\"]};\n  const [routesList, setRoutesList] = useState([\"testRoute\", \"testRoute2\"])\n  return(<React.StrictMode>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<App />} />\n          {this.state.routesList.map((routePoint) => <Route path={[\"/\", routePoint].join(\"\")} element={<Test point={routePoint}/>}/>)}\n        </Routes>\n      </BrowserRouter>\n  </React.StrictMode>)\n};\n\nReactDOM.render(\n  <Renders/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}