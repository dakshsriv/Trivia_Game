{"ast":null,"code":"var _jsxFileName = \"/home/daksh/Projects/Trivia_Game/frontend/src/components/Create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Create() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [responses, setResponses] = useState([\"\", \"\", \"\", \"\"]);\n  const [timer, setTimer] = useState(0);\n  const aidList = [0, 1, 2, 3];\n\n  function updateResponse(event, index) {\n    const preResponses = responses;\n    preResponses[index] = event.target.value;\n    setResponses(preResponses);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"Text\",\n        onChange: event => setName(event.target.value),\n        value: name,\n        placeholder: \"Question name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), aidList.map(index => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [console.log(responses[index]), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: [\"Response\", (parseInt(index) + 1).toString()].join(\" \"),\n          onChange: event => updateResponse(event, index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setAnswer(responses[index], console.log(answer)),\n          children: \"Correct Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Create, \"gF63ZAWgT7lJLtjiUAbAmDp4dn4=\");\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/home/daksh/Projects/Trivia_Game/frontend/src/components/Create.js"],"names":["React","useState","Create","name","setName","answer","setAnswer","responses","setResponses","timer","setTimer","aidList","updateResponse","event","index","preResponses","target","value","map","console","log","parseInt","toString","join"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,CAAD,CAAlC;AAEA,QAAMU,OAAO,GAAG,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,CAAhB;;AAEA,WAASC,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsC;AACpC,UAAMC,YAAY,GAAGR,SAArB;AACAQ,IAAAA,YAAY,CAACD,KAAD,CAAZ,GAAsBD,KAAK,CAACG,MAAN,CAAaC,KAAnC;AACAT,IAAAA,YAAY,CAACO,YAAD,CAAZ;AACD;;AAED,sBACE;AAAA,2BACE;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAGF,KAAD,IAAWT,OAAO,CAACS,KAAK,CAACG,MAAN,CAAaC,KAAd,CAA/C;AAAqE,QAAA,KAAK,EAAEd,IAA5E;AAAkF,QAAA,WAAW,EAAC,eAA9F;AAA8G,QAAA,QAAQ;AAAtH;AAAA;AAAA;AAAA;AAAA,cADF,EAEGQ,OAAO,CAACO,GAAR,CAAaJ,KAAD,iBACX;AAAA,mBACGK,OAAO,CAACC,GAAR,CAAYb,SAAS,CAACO,KAAD,CAArB,CADH,eAEE;AAAQ,UAAA,IAAI,EAAC,MAAb;AACA,UAAA,WAAW,EAAE,CAAC,UAAD,EAAa,CAACO,QAAQ,CAACP,KAAD,CAAR,GAAgB,CAAjB,EAAoBQ,QAApB,EAAb,EAA6CC,IAA7C,CAAkD,GAAlD,CADb;AAEA,UAAA,QAAQ,EAAGV,KAAD,IAAWD,cAAc,CAACC,KAAD,EAAQC,KAAR;AAFnC;AAAA;AAAA;AAAA;AAAA,gBAFF,eAME;AAAQ,UAAA,OAAO,EAAE,MAAMR,SAAS,CAACC,SAAS,CAACO,KAAD,CAAV,EAAmBK,OAAO,CAACC,GAAR,CAAYf,MAAZ,CAAnB,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF;AAAA,SAAUS,KAAV;AAAA;AAAA;AAAA;AAAA,cADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA9BQZ,M;;KAAAA,M;AAgCT,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react'\n\nfunction Create() {\n  const [name, setName] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [responses, setResponses] = useState([\"\", \"\", \"\", \"\"]);\n  const [timer, setTimer] = useState(0);\n\n  const aidList = [0,1,2,3];\n\n  function updateResponse(event, index) {\n    const preResponses = responses;\n    preResponses[index] = event.target.value\n    setResponses(preResponses);\n  }\n\n  return(\n    <div>\n      <form>\n        <input type=\"Text\" onChange={(event) => setName(event.target.value)} value={name} placeholder=\"Question name\" required/>\n        {aidList.map((index) => \n          <div key={index}>\n            {console.log(responses[index])}\n            <input  type=\"text\"\n            placeholder={[\"Response\", (parseInt(index)+1).toString()].join(\" \")}\n            onChange={(event) => updateResponse(event, index)}\n            />\n            <button onClick={() => setAnswer(responses[index], console.log(answer))}>Correct Answer</button>\n          </div>\n        )}\n      </form>\n    </div>)   \n}\n\nexport default Create"]},"metadata":{},"sourceType":"module"}