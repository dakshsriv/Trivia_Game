{"ast":null,"code":"var _jsxFileName = \"/home/daksh/Projects/Trivia_Game/frontend/src/components/Game.js\",\n    _s2 = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport { useTimer } from 'react-timer-hook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Game(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [questions, setQuestions] = useState();\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [question, setQuestion] = useState(props.questions[0]);\n  const [isEndScreen, setIsEndScreen] = useState(false);\n  const [len, setLen] = useState(0);\n  var totalTime = len * 10; //props.questions.length;\n\n  var initTime = new Date();\n  initTime.setSeconds(initTime.getSeconds() + totalTime);\n  var expiryTimestamp = initTime;\n  var {\n    seconds,\n    minutes,\n    hours,\n    days,\n    isRunning,\n    start,\n    pause,\n    resume,\n    restart\n  } = [null, null, null, null, null, null, null, null, null];\n  useEffect(() => {\n    axios.get(\"localhost:3000/api/\").then(response => {\n      setQuestions(response.data);\n    });\n  }, []);\n\n  _s(useEffect(_s(() => {\n    _s();\n\n    setLen(questions.length);\n    totalTime = len * 10;\n    initTime = new Date();\n    initTime.setSeconds(initTime.getSeconds() + totalTime);\n    expiryTimestamp = inittime;\n    [seconds, minutes, hours, days, isRunning, start, pause, resume, restart] = useTimer({\n      expiryTimestamp,\n      onExpire: () => console.warn(\"onExpire called\")\n    });\n  }, \"YXE2vPJeFfbl5hTWPX70a3JESkk=\", false, function () {\n    return [useTimer];\n  }), [questions]), \"YXE2vPJeFfbl5hTWPX70a3JESkk=\", false, function () {\n    return [useTimer];\n  });\n\n  const checkAnswer = (response, answer) => {\n    console.log(response, answer, len);\n\n    if (response === answer) {\n      setCorrectAnswers(correctAnswers + 1);\n    }\n\n    var newIndex = questionIndex + 1;\n    setQuestionIndex(newIndex);\n    setQuestion(props.questions[questionIndex + 1]);\n\n    if (questionIndex + 1 === len) {\n      setIsEndScreen(true);\n    }\n  };\n\n  if (minutes === 0 && seconds === 0 && !isEndScreen) {\n    setIsEndScreen(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !props.question ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"No questions \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.callBackFunction,\n        children: \"Return to home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isEndScreen ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"You got \", correctAnswers, \"/\", len, \" correct.\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.callBackFunction,\n          children: \"Return to home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: question.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 7\n          }, this), question.responses.map(response => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              console.log(question);\n              checkAnswer(response, question.answer, props.questions.length);\n            },\n            children: response\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 43\n          }, this))]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 5\n        }, this), \"Correct Answers: \", correctAnswers, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [minutes.toString().padStart(2, \"0\"), \":\", seconds.toString().padStart(2, \"0\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(Game, \"J3FXdmgOl9MTaa7PQL93t8sbKN0=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/home/daksh/Projects/Trivia_Game/frontend/src/components/Game.js"],"names":["axios","React","useState","useEffect","useTimer","Game","props","questions","setQuestions","correctAnswers","setCorrectAnswers","questionIndex","setQuestionIndex","question","setQuestion","isEndScreen","setIsEndScreen","len","setLen","totalTime","initTime","Date","setSeconds","getSeconds","expiryTimestamp","seconds","minutes","hours","days","isRunning","start","pause","resume","restart","get","then","response","data","length","inittime","onExpire","console","warn","checkAnswer","answer","log","newIndex","callBackFunction","name","responses","map","id","toString","padStart"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, {useState, useEffect} from 'react';\nimport { useTimer } from 'react-timer-hook';\n\nfunction Game(props) {\n  const [questions, setQuestions] = useState();\n  const [correctAnswers, setCorrectAnswers] = useState(0);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [question, setQuestion] = useState(props.questions[0]);\n  const [isEndScreen, setIsEndScreen] = useState(false);\n  const [len, setLen] = useState(0);\n  var totalTime = len*10//props.questions.length;\n  var initTime = new Date();\n  initTime.setSeconds(initTime.getSeconds() + totalTime);\n  var expiryTimestamp = initTime;\n\n  var {\n    seconds,\n    minutes,\n    hours,\n    days,\n    isRunning,\n    start,\n    pause,\n    resume,\n    restart\n  } = [null,null,null,null,null,null,null,null,null]\n\n  useEffect(() => {\n    axios.get(\"localhost:3000/api/\").then(response => {setQuestions(response.data)});\n  }, [])\n\n  useEffect(() => {\n    setLen(questions.length);\n    totalTime = len*10;\n    initTime = new Date();\n    initTime.setSeconds(initTime.getSeconds() + totalTime);\n    expiryTimestamp = inittime;\n    [\n      seconds,\n      minutes,\n      hours,\n      days,\n      isRunning,\n      start,\n      pause,\n      resume,\n      restart\n    ] = useTimer({\n      expiryTimestamp,\n      onExpire: () => console.warn(\"onExpire called\")\n    });\n  }, [questions]);\n\n  const checkAnswer = (response, answer) => {\n    console.log(response, answer, len)\n    if (response === answer) {   \n      setCorrectAnswers(correctAnswers+1);          \n    }\n    var newIndex = questionIndex + 1;\n    setQuestionIndex(newIndex);\n    setQuestion(props.questions[questionIndex+1])\n\n    \n    if (questionIndex+1 === len) {\n      setIsEndScreen(true)\n    }\n  }\n\n  if (minutes === 0 && seconds === 0 && !isEndScreen) {\n    setIsEndScreen(true);\n  }\n\n  return (\n  <div>\n    {!props.question ? <div>No questions <button onClick={props.callBackFunction}>Return to home</button></div> : \n    <div>\n      {isEndScreen ? \n    <div>\n      You got {correctAnswers}/{len} correct.\n      <button onClick={props.callBackFunction}>Return to home</button>\n  </div> : \n  <div>\n      <div key={question.id}>\n      <p>{question.name}</p>\n      {question.responses.map(response => <button onClick={() => {console.log(question);checkAnswer(response, question.answer, props.questions.length)}}>{response}</button>)}\n      </div>\n    <br/>\n    Correct Answers: {correctAnswers}\n    <div>\n    {(minutes.toString()).padStart(2, \"0\")}:{(seconds.toString()).padStart(2, \"0\")}\n    </div>\n    </div>}\n    </div>} \n  </div>) \n}\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}